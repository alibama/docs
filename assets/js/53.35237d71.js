(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{418:function(e,t,n){"use strict";n.r(t);var o=n(24),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"getting-started-with-a-local-instance"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getting-started-with-a-local-instance"}},[e._v("#")]),e._v(" Getting started with a local instance")]),e._v(" "),n("p",[n("code",[e._v("vocli")]),e._v(" is a command line interface to the vochain for end users with basic blockchain and CLI experience. For the latest usage information please refer to "),n("a",{attrs:{href:"https://github.com/vocdoni/vocdoni-node/blob/master/cmd/vocli/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("vocdoni-node/cmd/vocli/README.md"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[n("code",[e._v("voconed")]),e._v(" is a convenient form of "),n("code",[e._v("dvotenode")]),e._v(" that doesn't require that much setup. It's useful as a quick single-node test blockchain to get a feeling for the vochain as a whole.")]),e._v(" "),n("h1",{attrs:{id:"building"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#building"}},[e._v("#")]),e._v(" Building")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("git clone https://github.com/vocdoni/vocdoni-node && cd vocdoni-node\ngo build ./cmd/vocli\ngo build ./cmd/voconed\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ ./vocli help\nvocli is a convenience CLI that helps you do things on Vochain\n\nUsage:\n  vocli [command]\n\nAvailable Commands:\n  account     Manage a key\'s account. Accounts are stored on the vochain and are controlled by keys.\n  claimfaucet Claim tokens from another account, using a payload generated from that account that acts as an authorization.\n  genfaucet   Generate a payload allowing another account to claim tokens from this account.\n  help        Help about any command\n  keys        Create, import and list keys.\n  mint        Mint more tokens to an address. Only the Treasurer may do this.\n  send        Send tokens to another account\n  sign        Sign a string message. Used for debugging\n  txcost      Manage transaction costs for each type of transaction. Only the Treasurer may do this.\n\nFlags:\n  -d, --debug             prints additional information; $VOCHAIN_DEBUG\n  -h, --help              help for vocli\n      --home string       root directory where all vochain files are stored; $VOCHAIN_HOME (default "/home/shinichi/.dvote")\n  -n, --nonce uint32      account nonce to use when sending transaction\n                          \t(useful when it cannot be queried ahead of time, e.g. offline transaction signing)\n      --password string   supply the password as an argument instead of prompting\n  -u, --url string        Gateway RPC URL; $VOCHAIN_URL (default "https://gw1.dev.vocdoni.net/dvote")\n\nUse "vocli [command] --help" for more information about a command.\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ ./voconed --help\nUsage of ./voconed:\n      --dir string         storage data directory (default "/home/shinichi/.voconed")\n      --oracle string      oracle private hexadecimal key\n      --treasurer string   treasurer public address\n      --logLevel string    log level (info, debug, warn, error) (default "info")\n      --port int           network port for the HTTP API (default 9095)\n      --urlPath string     HTTP path for the API rest (default "/dvote")\n      --blockPeriod int    block time target in seconds (default 5)\n      --blockSize int      max number of transactions per block (default 500)\n      --txCosts uint       transaction cost for every transaction type (default 10)\n      --disableIpfs        disable built-in IPFS node\npflag: help requested\n')])])]),n("h1",{attrs:{id:"run-the-chain"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#run-the-chain"}},[e._v("#")]),e._v(" Run the chain")]),e._v(" "),n("p",[e._v("vochain has two types of important system accounts - the treasurer, who can mint/burn tokens, and oracles, a bridge to EVM chains that watches for events there and submits corresponding transactions on vochain, or submit a transaction on the EVM chain based on the result of a process on vochain. The treasurer mints tokens to new entities (accounts), who need the tokens to conduct a new process (poll, election etc). The entities in turn airdrop the tokens to the participants of the process/poll/election, so that the participants can submit transactions too.")]),e._v(" "),n("p",[e._v("Generate two keys, one for the treasurer and another for an oracle. Go-Ethereum's "),n("code",[e._v("geth")]),e._v(" can be used for the same purpose - just rename the "),n("code",[e._v(".json")]),e._v(" files to "),n("code",[e._v(".vokey")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ ./vocli keys new\nThe key will be generated the key and saved, encrypted, on your disk.\nRemember to run 'vocli account set <address>' afterwards to create an account for this key on the vochain.\nYour new key file will be locked with a password. Please give a password:\n\nYour new key was generated\nPublic address of the key:   0x24F6b3f0AECbF7303bCdB786830C0f825A32cEEA\nPath of the secret key file: /home/shinichi/.dvote/keys/0x24F6b3f0AECbF7303bCdB786830C0f825A32cEEA-2022-7-19.vokey\n- As usual, please BACKUP your key file and REMEMBER your password!\n")])])]),n("p",[e._v("Despite what the help message states, the treasurer account does not need the "),n("code",[e._v("account set")]),e._v(" command, as it is handled differently in the vochain's State than a normal account. The oracle's account will be set by "),n("code",[e._v("voconed")]),e._v(" automatically too, so you don't have to do anything.")]),e._v(" "),n("p",[n("code",[e._v("voconed")]),e._v(" needs the private key of the oracle to run. Print the private key with the "),n("code",[e._v("keys showprivkey")]),e._v(" command.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("./vocli keys showprivkey /home/shinichi/.dvote/keys/0x24F6b3f0AECbF7303bCdB786830C0f825A32cEEA-2022-7-19.vokey\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("./voconed --treasurer=$TREASURER_ADDRESS --oracle=$ORACLE_PRIVATE_KEY --logLevel=info\n022-07-19T20:00:22+02:00\tINFO\tvoconed/voconed.go:89\tlogger construction succeeded at level info with output stdout\n2022-07-19T20:00:22+02:00\tINFO\tvoconed/voconed.go:90\tusing data directory at /home/shinichi/.voconed\n2022-07-19T20:00:22+02:00\tINFO\tvochain/state.go:375\tinitializing StateDB\n2022-07-19T20:00:22+02:00\tINFO\tvochain/state.go:439\tStateDB load took 207ns\n2022-07-19T20:00:22+02:00\tINFO\tvochain/state.go:352\tstate database is ready at version 0 with hash 23206a320bab2c8c7965f81692e2d49c11d266a57318b389c9d1ae46f1452246\n2022-07-19T20:00:22+02:00\tWARN\tvocone/vocone.go:219\tadding new oracle key 0x24F6b3f0AECbF7303bCdB786830C0f825A32cEEA\n2022-07-19T20:00:22+02:00\tWARN\tscrutinizer/scrutinizer.go:177\tcould not get the transaction count: No data found for this key\n2022-07-19T20:00:22+02:00\tWARN\tscrutinizer/scrutinizer.go:194\tcould not get the envelope count: No data found for this key\n2022-07-19T20:00:22+02:00\tWARN\tscrutinizer/scrutinizer.go:207\tcould not get the process count: No data found for this key\n2022-07-19T20:00:22+02:00\tWARN\tscrutinizer/scrutinizer.go:220\tcould not get the entity count: No data found for this key\n2022-07-19T20:00:22+02:00\tINFO\tscrutinizer/scrutinizer.go:129\tindexer initialization took 708.187Âµs, stored 0 transactions, 0 envelopes, 0 processes and 0 entities\n2022/07/19 20:00:22 OK    0001_create_table_processes.sql\n2022/07/19 20:00:22 OK    0002_create_table_votes.sql\n2022/07/19 20:00:22 goose: no migrations to run. current version: 2\n2022-07-19T20:00:22+02:00\tINFO\tservice/storage.go:18\tcreating ipfs service\n2022-07-19T20:00:22+02:00\tINFO\tipfs/ipfs.go:29\tchecking if daemon is running\n2022-07-19T20:00:22+02:00\tINFO\tipfs/ipfsInit.go:37\tinitializing IPFS node at /home/shinichi/.voconed/ipfs\n2022-07-19T20:00:22+02:00\tINFO\tvochaininfo/vochaininfo.go:161\tstarting vochain info service every 10 seconds\n2022-07-19T20:00:22+02:00\tINFO\tipfs/ipfsInit.go:87\tIPFS configuration file initialized\n2022-07-19T20:00:22+02:00\tINFO\tipfs/ipfs.go:51\tattempting to start IPFS node\n2022-07-19T20:00:22+02:00\tINFO\tipfs/ipfs.go:52\tconfig root: /home/shinichi/.voconed/ipfs\n2022-07-19T20:00:22+02:00\tINFO\tdata/ipfs.go:79\tIPFS peerID: QmcPkWwJyWAPdDd7kvpugcapaekwPY1Tjfa6gy1t9wwhMs\n2022-07-19T20:00:22+02:00\tINFO\tvoconed/voconed.go:109\tsetting treasurer 0xfe10DAB06D636647f4E40dFd56599da9eF66Db1c\n2022-07-19T20:00:22+02:00\tINFO\tvoconed/voconed.go:115\tsetting tx costs to 10\n2022-07-19T20:00:22+02:00\tINFO\tvocone/vocone.go:446\t[vochain info] height:0 mempool:0 processes:0 votes:0 vxm:0 voteCache:0 blockTime:{}\n2022-07-19T20:00:22+02:00\tINFO\thttprouter/httprouter.go:150\tstarting go-chi http server\n2022-07-19T20:00:22+02:00\tINFO\thttprouter/httprouter.go:164\trouter ready at http://[::]:9095\n2022-07-19T20:00:22+02:00\tINFO\thttprouter/httprouter.go:178\tadded namespace rpcAPI\n2022-07-19T20:00:22+02:00\tINFO\thttprouter/httprouter.go:212\tadded private handler for namespace rpcAPI with pattern /dvote\n2022-07-19T20:00:22+02:00\tINFO\trpcapi/handlers.go:100\tenabling results API\n2022-07-19T20:00:22+02:00\tINFO\trpcapi/handlers.go:70\tenabling vote API\n2022-07-19T20:00:22+02:00\tINFO\trpcapi/handlers.go:19\tenabling file API\n2022-07-19T20:00:22+02:00\tINFO\trpcapi/handlers.go:131\tenabling indexer API\n...\n\n")])])]),n("h1",{attrs:{id:"create-an-account"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create-an-account"}},[e._v("#")]),e._v(" Create an Account")]),e._v(" "),n("p",[e._v("Now that "),n("code",[e._v("voconed")]),e._v(" is running, create another account.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("./vocli keys new\nThe key will be generated the key and saved, encrypted, on your disk.\nRemember to run 'vocli account set <address>' afterwards to create an account for this key on the vochain.\nYour new key file will be locked with a password. Please give a password:\n\nYour new key was generated\nPublic address of the key:   0x110951D9259a9cD0830DCe90134b1079c01544A3\nPath of the secret key file: /home/shinichi/.dvote/keys/0x110951D9259a9cD0830DCe90134b1079c01544A3-2022-7-19.vokey\n- As usual, please BACKUP your key file and REMEMBER your password!\n")])])]),n("p",[e._v("On Ethereum, you can create a new key without having to tell the network of its existence. This is different in Vochain, where we have to send a free "),n("code",[e._v("SetAccountInfoTx")]),e._v(" to the network to tell vochain that this new Key exists, and we should create an Account for it. Hence the distinction between "),n("em",[e._v("Keys")]),e._v(" and "),n("em",[e._v("Accounts")]),e._v(" (Ethereum uses these words interchangeably).")]),e._v(" "),n("p",[e._v("Ensure that the "),n("code",[e._v("SetAccountInfoTx")]),e._v(" is sent to your "),n("code",[e._v("voconed")]),e._v(" instance using the environment variable "),n("code",[e._v("VOCHAIN_URL")]),e._v(" or "),n("code",[e._v("--url")]),e._v(". The API URL always has to end in "),n("code",[e._v("/dvote")]),e._v(".\nCurrently, you may use any string for the IPFS Info-URI.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("./vocli account set /home/shinichi/.dvote/keys/0x110951D9259a9cD0830DCe90134b1079c01544A3-2022-7-19.vokey ipfs://unvalidated --url=http://localhost:9095/dvote\nor\nVOCHAIN_URL=http://localhost:9095/dvote ./vocli account set /home/shinichi/.dvote/keys/0x110951D9259a9cD0830DCe90134b1079c01544A3-2022-7-19.vokey ipfs://unvalidated\n")])])]),n("h1",{attrs:{id:"workflow"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workflow"}},[e._v("#")]),e._v(" Workflow")]),e._v(" "),n("ol",[n("li",[e._v("An Entity (could be a real life company, organization or anon who wants to conduct a poll/process) creates an Account on the vochain.")]),e._v(" "),n("li",[e._v("The treasurer mints tokens to the entity's Account, thus ensuring that it can create a process.")]),e._v(" "),n("li",[e._v("The entity then sends tokens to other participants, who have created their own Accounts, ensuring that they can submit votes to the vochain.")])]),e._v(" "),n("p",[e._v("For Step 3, an entity can simply send tokens using "),n("code",[e._v("vocli send")]),e._v(" or use the "),n("code",[e._v("genfaucet/claimfaucet")]),e._v(' commands. Any account can generate a "faucet package", which is then used by another account like a coupon to "claim the faucet". For examples, see the '),n("a",{attrs:{href:"https://github.com/vocdoni/vocdoni-node/blob/master/cmd/vocli/README.md#faucet",target:"_blank",rel:"noopener noreferrer"}},[e._v("vocli README.md"),n("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=a.exports}}]);